@use 'sass:math';
@use '../Config/_variables' as *;
////////////////
//  mixin
////////////////
//ex
//@include mq(max,0,768){//SP時
//   @include font-size(28);
//   margin-bottom: (30 / 768) * 100vw;
//}
// @include mq(min,0,768){//PC時
//   @include font-size(48);
//   margin-bottom: 40px;
// }
//mq
@mixin mq($val, $min: $md, $max: $md) {
  @if $val == max {
    @media screen and (max-width: ($max + px)) {
      @content;
    }
  } @else if $val == min {
    @media screen and (min-width: ($min + px)) {
      @content;
    }
  } @else if $val == both {
    @media screen and (min-width: ($min + px)) and (max-width: ($max + px)) {
      @content;
    }
  }
}

//ex
// @include font-size(28);
//font-size
@mixin font-size($size, $base: 10) {
  font: {
    size: $size + px;
    size: math.div($size, $base) * 1rem;
  }
}

// //ex
// // @include sizeVw(mt, 60);  margin-top
// // @include sizeVw(fs, 60);  font-size
// // sizeVW
@mixin sizeVw($property, $size) {
  $winW: $sp; // デザインカンプの幅を設定
  @if $property == 'fs' {
    font-size: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'mt' {
    margin-top: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'mr' {
    margin-right: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'mb' {
    margin-bottom: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'ml' {
    margin-left: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'pt' {
    padding-top: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'pr' {
    padding-right: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'pb' {
    padding-bottom: calc((#{$size} / #{$winW}) * 100vw);
  }
  @if $property == 'pl' {
    padding-left: calc((#{$size} / #{$winW}) * 100vw);
  }
}

//ex
// @include border(top,1,solid,#ccc);  //border-top:1px solid #ccc;
@mixin border($pos, $width, $type, $color) {
  border-#{$pos}: #{$width}px $type $color;
}

//ex
// @include absolute(0,0,0,0);  //top: 0; right:0; bottom:0 left: calc(50%);
// @include absolute(0,null,null,calc(50%));  //top: 0; left: calc(50%);
// @include absolute($top:0, $bottom:0);  //top: 0; bottom: 0;
// @include absolute(0,0,0,0,cont);  //top: 0; right:0; bottom:0 left: calc(50%); content: "";
//position
@mixin absolute($top: null, $right: null, $bottom: null, $left: null, $cont: null) {
  position: absolute;
  @if $cont != null {
    content: '';
  }
  @if $top != null {
    top: $top;
  }
  @if $right != null {
    right: $right;
  }
  @if $bottom != null {
    bottom: $bottom;
  }
  @if $left != null {
    left: $left;
  }
}

// //ex
// // @include transition();
// // @include transition(1s,.5s);
// // @include transition(1s,.5s,linear);
// //transition
@mixin transition($props: all, $speed: 0.4s, $delay: 0s, $easeing: ease) {
  transition: $props $speed $delay $easeing;
}
